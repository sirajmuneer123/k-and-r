/*
Exercise 5-6. Rewrite appropriate programs from earlier chapters and exercises with pointers
instead of array indexing. Good possibilities include getline (Chapters 1 and 4), atoi , itoa ,
and their variants (Chapters 2, 3, and 4), reverse (Chapter 3), and strindex and getop
(Chapter 4).
*/
#include<stdio.h>
#include<string.h>
int getline1(char *s,int lim);
int atoi(char *s);
void itoa(int n,char *s);
void reverse1(char *s);
int strindex(char *s,char *t);
int getop(char *s);
main()
{
	char s[1000];
	char t[1000]="si";
	getop(s);
	printf("%s\n",s);
	//printf("str index=%d\n",strindex(s,t));
	//printf("%d\n",getline1(s,1000));
	//printf("%s\n",s);
	//itoa(-123,s);
//	printf("%s\n	%d",s,strlen(s));
}
int getop(char *s)
{
	int c;
	while((c=getchar())==' '||c=='\t')
		;
	if(!isdigit(c)&&c!='.')
		return c;
	if(isdigit(c)){
		*s++=c;
		while(isdigit(*s++=c=getchar()))
			;
	}
	if(c=='.')
		while(isdigit(*s++=c=getchar()))
			;
	*s='\0';
	return 0;

	
		
}
int getline1(char *s,int lim)
{
	int length=0,c;
	while(--lim>0 && (c=getchar())!=EOF && c!='\n'){
		*s++=c;
		++length;
	}
	if(c=='\n')
		*s=c;
	*s='\0';
	return length;
}
int atoi(char *s)
{
	int n;
	for(n=0;*s!='\0' && *s>'0' && *s<'9';s++)
		n=n*10+(*s-'0');
	return n;
}
void itoa(int n,char *s)
{
	int sign,l;
	char *t=s;
	if((sign=n)<0)
		n=-n;
	do {
		*s++=n % 10+'0';
	}while((n/=10)>0);
	if(sign<0)
		*s++='-';
	*s='\0';
	printf("%s\n",t);
	reverse1(t);
	printf("%s\n",t);
}
void reverse1(char *s)
{
	int len,c;
	len=strlen(s);
	char *temp;
	for(temp=s+(len-1);s<temp;temp--,s++){
		c=*s;
		*s=*temp;
		*temp=c;
			
	}
		
}
int strindex(char *s,char *t)
{
	char *k,*j;
	int index;
	for(index=1;*s!='\0';s++,index++){
		for(j=s,k=t;*k!='\0'&& *j==*k;j++,k++)
			;
	if(*k=='\0')
		return index;
	}
	return -1;
}
